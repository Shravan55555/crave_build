#
# Copyright (C) 2024 Antonino Scordino
# Copyright (C) 2024 Souhrud Reddy
#
# SPDX-License-Identifier: Apache-2.0
#

name: Crave pull in devspace
on:
  workflow_dispatch:
    inputs:
      DEVICE_CODENAME:
        description: 'Device Codename'
        default: apollo
        required: true

jobs:
  Start-Runner:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y tmux

      # Download and configure 'crave'.
    - name: Configure the 'crave' environment
      run: |
        mkdir ${HOME}/bin/
        curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
        mv ${PWD}/crave ${HOME}/bin/
        sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
        envsubst < ${PWD}/crave.conf.sample >> ${PWD}/crave.conf
        rm -rf ${PWD}/crave.conf.sample

      env:
        CRAVE_USERNAME: ${{  secrets.CRAVE_USERNAME  }}
        CRAVE_TOKEN: ${{  secrets.CRAVE_TOKEN  }}

    - name: Run crave devspace
      run: |
        crave devspace -- "
        echo "Looking for runner..."
          # Look for whether there's a runner folder set up
        if [ -f actions-runner/run.sh ] ; then
          echo -e '\e[32mRunner found! Restarting it...\e[0m'
        else
          echo -e '\e[31mError! Runner not found!\e[0m'
          exit 1
        fi

        if tmux has-session -t ghactions; then 
          echo -e '\e[32mRunner is already Running\e[0m'
        else 
          tmux kill-session -t ghactions;
          tmux new-session -d -s ghactions 
          tmux send-keys -t ghactions './actions-runner/run.sh' Enter 
          echo -e '\e[32mRunner Started\e[0m'
        fi "

  pull:
    timeout-minutes: 960
    name: Crave-pull objects to devspace
    runs-on: self-hosted

    steps:

    - name: Initialize build directory
      run: |
        build_dir=$(crave clone list --json | jq -r '.clones[]."Cloned At"')
        echo "BUILD_DIR=$build_dir" >> $GITHUB_ENV
        echo "DEVICE_CODENAME=${{ github.event.inputs.DEVICE_CODENAME }}" >> $GITHUB_ENV

    - name: Running "crave pull"
      continue-on-error: false
      run: |
        cd ${{ env.BUILD_DIR }}

            rm -rf *.zip *.sha256sum *.md5sum *.img out

            crave pull 'out/target/product/${{ env.DEVICE_CODENAME }}/*.zip' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/recovery*img' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/*.sha256sum' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/*.md5sum' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/boot*img' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/vendor_boot*img' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/${{ env.DEVICE_CODENAME }}*json' \
            'out/target/product/${{ env.DEVICE_CODENAME }}/${{ env.DEVICE_CODENAME }}*txt'
            
            rm -f *-ota-*.zip *-eng*.zip lineage*ota.zip aosp*ota.zip statix*ota.zip
            mkdir -p out
            mv -f ${{ env.DEVICE_CODENAME }}*json ${{ env.DEVICE_CODENAME }}*txt *.zip *.sha256sum *.md5sum *.img out/ || true

    - name: Display files information
      run: |
        cd "${{ env.BUILD_DIR }}/out"

        echo "FILE PATH: ${{ env.BUILD_DIR }}/out"
        echo "File details:"
        find . -type f -exec ls -lh {} \; | awk '{print $9 ": " $5}'
